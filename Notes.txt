[Def, GFG] Design Pattern -  A design pattern systematically names, motivates, and explains a general design that addresses a recurring design problem in object-oriented systems.
[Def, GoF] Design Patterns 
- Descriptions of communicating objects and classes that are customized to solve a general design problem in a particular context.
- A design pattern names, abstracts, and identifies the key aspects of a common design structure that make it useful for creating a reusable object-oriented design.


GoF has broken design patterns into 3 groups - Creational, Structural and Behavioural
Creational
----------
[Def, Baeldung] Creational Design Patterns are concerned with the way in which objects are created.
[GoF] 
    Creational design patterns abstract the instantiation process.
    They help make a system independent of how its objects are created, composed, and represented. 
    A class creational pattern uses inheritance to vary the class that's instantiated, whereas an object creational pattern will delegate instantiation to another object.

List of creational design patterns
1. Singleton
2. Builder
3. Prototype
4. Factory
5. AbstractFactory

Structural
----------
[Def, RefactoringGuru] Structural design patterns explain how to assemble objects and classes into larger structures, while keeping these structures flexible and efficient.
[Def, GoF] Structural patterns are concerned with how classes and objects are composed to form larger structures.

Used for improving performance, refactoring or memory utilization

List of Structural design patterns
1. Adapter
2. Bridge
3. Composite
4. Decorator
5. Facade
6. Flyweight
7. Proxy
